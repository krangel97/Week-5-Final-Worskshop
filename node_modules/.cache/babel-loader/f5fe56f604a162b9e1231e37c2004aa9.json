{"ast":null,"code":"import*as ActionTypes from'./ActionTypes';import{baseUrl}from'../shared/baseUrl';export var fetchCampsites=function fetchCampsites(){return function(dispatch){dispatch(campsitesLoading());return fetch(baseUrl+'campsites').then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){var errMess=new Error(error.message);throw errMess;}).then(function(response){return response.json();}).then(function(campsites){return dispatch(addCampsites(campsites));}).catch(function(error){return dispatch(campsitesFailed(error.message));});};};export var campsitesLoading=function campsitesLoading(){return{type:ActionTypes.CAMPSITES_LOADING};};export var campsitesFailed=function campsitesFailed(errMess){return{type:ActionTypes.CAMPSITES_FAILED,payload:errMess};};export var addCampsites=function addCampsites(campsites){return{type:ActionTypes.ADD_CAMPSITES,payload:campsites};};export var fetchComments=function fetchComments(){return function(dispatch){return fetch(baseUrl+'comments').then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){var errMess=new Error(error.message);throw errMess;}).then(function(response){return response.json();}).then(function(comments){return dispatch(addComments(comments));}).catch(function(error){return dispatch(commentsFailed(error.message));});};};export var commentsFailed=function commentsFailed(errMess){return{type:ActionTypes.COMMENTS_FAILED,payload:errMess};};export var addComments=function addComments(comments){return{type:ActionTypes.ADD_COMMENTS,payload:comments};};export var addComment=function addComment(comment){return{type:ActionTypes.ADD_COMMENT,payload:comment};};export var postComment=function postComment(campsiteId,rating,author,text){return function(dispatch){var newComment={campsiteId:campsiteId,rating:rating,author:author,text:text};newComment.date=new Date().toISOString();return fetch(baseUrl+'comments',{method:\"POST\",body:JSON.stringify(newComment),headers:{\"Content-Type\":\"application/json\"}}).then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){return dispatch(addComment(response));}).catch(function(error){console.log('post comment',error.message);alert('Your comment could not be posted\\nError: '+error.message);});};};export var fetchPromotions=function fetchPromotions(){return function(dispatch){dispatch(promotionsLoading());return fetch(baseUrl+'promotions').then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){var errMess=new Error(error.message);throw errMess;}).then(function(response){return response.json();}).then(function(promotions){return dispatch(addPromotions(promotions));}).catch(function(error){return dispatch(promotionsFailed(error.message));});};};export var promotionsLoading=function promotionsLoading(){return{type:ActionTypes.PROMOTIONS_LOADING};};export var promotionsFailed=function promotionsFailed(errMess){return{type:ActionTypes.PROMOTIONS_FAILED,payload:errMess};};export var addPromotions=function addPromotions(promotions){return{type:ActionTypes.ADD_PROMOTIONS,payload:promotions};};","map":{"version":3,"sources":["C:/Users/kryst/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","fetchCampsites","dispatch","campsitesLoading","fetch","then","response","ok","error","Error","status","statusText","errMess","message","json","campsites","addCampsites","catch","campsitesFailed","type","CAMPSITES_LOADING","CAMPSITES_FAILED","payload","ADD_CAMPSITES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","addComment","comment","ADD_COMMENT","postComment","campsiteId","rating","author","text","newComment","date","Date","toISOString","method","body","JSON","stringify","headers","console","log","alert","fetchPromotions","promotionsLoading","promotions","addPromotions","promotionsFailed","PROMOTIONS_LOADING","PROMOTIONS_FAILED","ADD_PROMOTIONS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const fetchCampsites = () => dispatch => {\r\n    dispatch(campsitesLoading());\r\n\r\n    return fetch(baseUrl + 'campsites')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(campsites => dispatch(addCampsites(campsites)))\r\n        .catch(error => dispatch(campsitesFailed(error.message)));\r\n};\r\n\r\nexport const campsitesLoading = () => ({\r\n    type: ActionTypes.CAMPSITES_LOADING\r\n});\r\n\r\nexport const campsitesFailed = errMess => ({\r\n    type: ActionTypes.CAMPSITES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addCampsites = campsites => ({\r\n    type: ActionTypes.ADD_CAMPSITES,\r\n    payload: campsites\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errMess => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const addComment = comment => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\r\n    \r\n    const newComment = {\r\n        campsiteId: campsiteId,\r\n        rating: rating,\r\n        author: author,\r\n        text: text\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newComment),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => { throw error; }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post comment', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n\r\n\r\nexport const fetchPromotions = () => dispatch => {\r\n    dispatch(promotionsLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(promotions => dispatch(addPromotions(promotions)))\r\n        .catch(error => dispatch(promotionsFailed(error.message)));\r\n};\r\n\r\nexport const promotionsLoading = () => ({\r\n    type: ActionTypes.PROMOTIONS_LOADING\r\n});\r\n\r\nexport const promotionsFailed = errMess => ({\r\n    type: ActionTypes.PROMOTIONS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPromotions = promotions => ({\r\n    type: ActionTypes.ADD_PROMOTIONS,\r\n    payload: promotions\r\n});"]},"metadata":{},"sourceType":"module"}