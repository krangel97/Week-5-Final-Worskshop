{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kryst\\\\Desktop\\\\NucampFolder\\\\3-React\\\\nucampsite\\\\src\\\\components\\\\CampsiteInfoComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CampsiteInfo extends Component {\n  /*renderComments(comments) {\r\n      if (comments) {\r\n          return (\r\n              <div className=\"col-md-5 m-1\">\r\n                  <h4>Comments</h4>\r\n                      {comments.map(comment => {\r\n                          return( <div key={comment.id}>\r\n                              <p>{comment.text}</p>\r\n                              <p>---{comment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                          </div>\r\n                          )\r\n                      })}\r\n              </div>\r\n          )\r\n      }\r\n  }\r\n    /*renderCampsite(campsite) {\r\n      return (\r\n          <div className =\"col-md-5 m-1\">\r\n              <Card>\r\n                  <CardImg top src={campsite.image} alt={campsite.name} />\r\n                  <CardBody>\r\n                      <CardTitle>{campsite.name}</CardTitle>\r\n                      <CardText>{campsite.description}</CardText>\r\n                  </CardBody>\r\n              </Card>\r\n          </div>\r\n      )\r\n  }\r\n  \r\n  render() {\r\n      if(this.props.campsite) {\r\n          return(\r\n              <div className=\"row\">\r\n                  {this.renderCampsite(this.props.campsite)}\r\n                  {this.renderComments(this.props.campsite.comments)}\r\n              </div>\r\n          )\r\n      }\r\n      return(\r\n          <div />\r\n      )\r\n  }*/\n  renderCampsite(campsite) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5 m-1\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardImg, {\n          top: true,\n          src: campsite.image,\n          alt: campsite.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: campsite.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            children: campsite.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderComments(comments) {\n    if (comments) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5 m-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), comments.map(comments => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1\",\n          children: [comments.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 36\n          }, this), \"-- \", comments.author, \", \", new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit'\n          }).format(new Date(Date.parse(comments.date)))]\n        }, comments.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    if (this.props.campsite) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderCampsite(this.props.campsite), this.renderComments(this.props.campsite.comments)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default CampsiteInfo;","map":{"version":3,"sources":["C:/Users/kryst/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","CampsiteInfo","renderCampsite","campsite","image","name","description","renderComments","comments","map","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","id","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4DC,SAA5D,QAA6E,YAA7E;;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAGjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEIQ,EAAAA,cAAc,CAACC,QAAD,EAAW;AAErB,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,IAAD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,GAAG,MAAZ;AAAa,UAAA,GAAG,EAAEA,QAAQ,CAACC,KAA3B;AAAkC,UAAA,GAAG,EAAED,QAAQ,CAACE;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAA,kCACI,QAAC,SAAD;AAAA,sBAAYF,QAAQ,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD;AAAA,sBAAWF,QAAQ,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AACrB,QAAGA,QAAH,EAAa;AACT,0BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKA,QAAQ,CAACC,GAAT,CAAaD,QAAQ,iBAAI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,qBACzBA,QAAQ,CAACE,IADgB,eACX;AAAA;AAAA;AAAA;AAAA,kBADW,SAEtBF,QAAQ,CAACG,MAFa,QAEH,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,YAAAA,IAAI,EAAE,SAAR;AAAmBC,YAAAA,KAAK,EAAE,OAA1B;AAAmCC,YAAAA,GAAG,EAAE;AAAxC,WAAjC,EAAqFC,MAArF,CAA4F,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAACY,IAApB,CAAT,CAA5F,CAFG;AAAA,WAA0BZ,QAAQ,CAACa,EAAnC;AAAA;AAAA;AAAA;AAAA,gBAAzB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATD,MASO;AACH,0BACI;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAEDC,EAAAA,MAAM,GAAI;AACN,QAAI,KAAKC,KAAL,CAAWpB,QAAf,EAAyB;AACrB,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACK,KAAKD,cAAL,CAAoB,KAAKqB,KAAL,CAAWpB,QAA/B,CADL,EAEK,KAAKI,cAAL,CAAoB,KAAKgB,KAAL,CAAWpB,QAAX,CAAoBK,QAAxC,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD,MAOO;AACH,0BACI;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAhGgC;;AAkGrC,eAAeP,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\nclass CampsiteInfo extends Component {\r\n\r\n\r\n    /*renderComments(comments) {\r\n        if (comments) {\r\n            return (\r\n                <div className=\"col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                        {comments.map(comment => {\r\n                            return( <div key={comment.id}>\r\n                                <p>{comment.text}</p>\r\n                                <p>---{comment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </div>\r\n                            )\r\n                        })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    /*renderCampsite(campsite) {\r\n        return (\r\n            <div className =\"col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg top src={campsite.image} alt={campsite.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{campsite.name}</CardTitle>\r\n                        <CardText>{campsite.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        if(this.props.campsite) {\r\n            return(\r\n                <div className=\"row\">\r\n                    {this.renderCampsite(this.props.campsite)}\r\n                    {this.renderComments(this.props.campsite.comments)}\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div />\r\n        )\r\n    }*/\r\n    renderCampsite(campsite) {\r\n\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg top src={campsite.image} alt={campsite.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{campsite.name}</CardTitle>\r\n                        <CardText>{campsite.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderComments(comments) {\r\n        if(comments) {\r\n            return (\r\n                <div className=\"col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    {comments.map(comments => <div className=\"p-1\" key={comments.id}> \r\n                    {comments.text}<br></br>\r\n                    -- {comments.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}</div>)}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.props.campsite) {\r\n            return (\r\n                <div className=\"row\">\r\n                    {this.renderCampsite(this.props.campsite)}\r\n                    {this.renderComments(this.props.campsite.comments)}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default CampsiteInfo"]},"metadata":{},"sourceType":"module"}