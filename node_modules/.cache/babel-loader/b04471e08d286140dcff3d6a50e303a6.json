{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kryst\\\\Desktop\\\\NucampFolder\\\\3-React\\\\nucampsite\\\\src\\\\components\\\\CampsiteInfoComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderCampsite(_ref) {\n  let {\n    campsite\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-5 m-1\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        top: true,\n        src: campsite.image,\n        alt: campsite.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(CardText, {\n          children: campsite.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = RenderCampsite;\n\nfunction RenderComments(_ref2) {\n  let {\n    comments\n  } = _ref2;\n\n  if (comments) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5 m-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"---\", comment.author, \",\", new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit'\n            }).format(new Date(Date.parse(comment.date)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c2 = RenderComments;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      isModalOpen: false\n    };\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    alert(\"Current state is: \" + JSON.stringify(values));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-sign-in fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), \"Submit Comment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(LocalForm, {\n            onSubmit: values => this.handleSubmit(values),\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"rating\",\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Control.select, {\n                model: \"rating\",\n                id: \"rating\",\n                name: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"author\",\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"text\",\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction CampsiteInfo(props) {\n  if (props.campsite) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/directory\",\n                children: \"Directory\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n              active: true,\n              children: props.campsite.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.campsite.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(RenderCampsite, {\n          campsite: props.campsite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RenderComments, {\n          comments: props.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 12\n  }, this);\n}\n\n_c3 = CampsiteInfo;\nexport default CampsiteInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RenderCampsite\");\n$RefreshReg$(_c2, \"RenderComments\");\n$RefreshReg$(_c3, \"CampsiteInfo\");","map":{"version":3,"sources":["C:/Users/kryst/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","Breadcrumb","BreadcrumbItem","Button","Modal","ModalHeader","ModalBody","Link","RenderCampsite","campsite","image","name","description","RenderComments","comments","map","comment","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","id","CommentForm","constructor","props","toggleModal","bind","handleSubmit","state","isModalOpen","setState","values","console","log","JSON","stringify","alert","render","CampsiteInfo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderCampsite({campsite}) {\r\n    return (\r\n        <div className =\"col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments}) {\r\n    if (comments) {\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                    {comments.map(comment => {\r\n                        return( \r\n                        <div key={comment.id}>\r\n                            <p>{comment.text}</p>\r\n                            <p>---{comment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                        </div>\r\n                        );\r\n                    })}\r\n                <CommentForm />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-sign-in fa-lg\" />Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\"rating\" id=\"rating\" name > \r\n\r\n                                    </Control.select>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\">Author</Label>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Label htmlFor=\"text\">Text</Label>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CampsiteInfo(props) {\r\n    if(props.campsite) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments comments={props.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\n\r\nexport default CampsiteInfo;"]},"metadata":{},"sourceType":"module"}