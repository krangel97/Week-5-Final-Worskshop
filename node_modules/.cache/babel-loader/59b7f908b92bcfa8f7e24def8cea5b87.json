{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Comments = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    errMess: null,\n    comments: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return { ...state,\n        errMess: null,\n        comments: action.payload\n      };\n\n    case ActionTypes.COMMENTS_FAILED:\n      return { ...state,\n        errMess: action.payload\n      };\n\n    case ActionTypes.ADD_COMMENT:\n      const comment = action.payload;\n      return { ...state,\n        comments: state.comments.concat(comment)\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/kryst/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","payload","COMMENTS_FAILED","ADD_COMMENT","comment","concat"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAoD;AAAA,MAAnDC,KAAmD,uEAA3C;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAA2C;AAAA,MAAXC,MAAW;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWC,QAAAA,OAAO,EAAE,IAApB;AAA0BC,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AAA3C,OAAP;;AAEJ,SAAKR,WAAW,CAACS,eAAjB;AACI,aAAO,EAAC,GAAGP,KAAJ;AAAWC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA3B,OAAP;;AAEJ,SAAKR,WAAW,CAACU,WAAjB;AACI,YAAMC,OAAO,GAAGN,MAAM,CAACG,OAAvB;AACA,aAAO,EAAC,GAAGN,KAAJ;AAAWE,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAeQ,MAAf,CAAsBD,OAAtB;AAArB,OAAP;;AAEJ;AACI,aAAOT,KAAP;AAZR;AAcH,CAfM;KAAMD,Q","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            const comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}